# Write a function `icecream_sundae` that takes two arguments, one list of ice cream flavors and one list of toppings, and returns a new list that contains all of the possible ice cream sundae combinations that can be made by combining each flavor with each toppings. If the flavors are "vanilla" and "chocolate" and the toppings are "chocolate sauce" and "berry sauce", the output list should contain "vanilla with chocolate sauce", "vanilla with berry sauce", "chocolate with chocolate sauce", "chocolate with berry sauce". 
  -Note the addition of the word "with" in the combined version. You can assume that both of the input lists only contain strings.

# pseudocode for scenario 1:
# define the function name with its 2 parameter (flavors, toppings)
# create an icecream combination variable and set it to be an empty list (output will add to this list at the end)
# create a for loop with the flavor elements in the flavors parameter
# (under the for loop) create another for loop for the topping elements in toppings parameter
# create another variable to show the possible combination between the flavors elements and the topping elements (add a with string and spaces in between the two elements)
# use the icecream combination variable and append it to the possible combination variable (to add each pair to the icecream combination empty list)
# (outside both of the for loops) return the icecream combination variable
# call the function name with all of the arguments inside each list

# scenario 1:
# def icecream_sundae (flavors, toppings):
#   icecream_combination = []

#   for flavors_element in flavors:
#     for toppings_element in toppings:
#       possible_combination = flavors_element + " with " + toppings_element
#       icecream_combination.append(possible_combination)

#   return icecream_combination


# pseudocode for scenario 2:
# define the function name with its 2 parameter (flavors, toppings)
# create an icecream combination variable and set it to be an empty list (output will add to this list at the end)
# create a for loop with the flavor elements in range (to create a sequence of the elements) in len (up to the length) of the in the flavors parameter
# (under the for loop) create another for loop with the topping elements in range (to create a sequence of the elements) in len (up to the length) of the in the toppings parameter
# create another variable to show the possible combination between the flavors elements inside the flavors parameter and the topping elements inside the topping parameter (add a with string and spaces in between the two elements)
# use the icecream combination variable and append it to the possible combination variable (to add each pair to the icecream combination empty list)
# (outside both of the for loops) return the icecream combination variable
# call the function name with all of the arguments inside each list

# scenario 2:
# def icecream_sundae (flavors, toppings):
  # icecream_combination = []

  # for flavors_element in range(len(flavors)):
  #     for toppings_element in range(len(toppings)):
  #       possible_combination = flavors[flavors_element] + " with " + toppings[toppings_element]
  #       icecream_combination.append(possible_combination)

  # return icecream_combination
  
  
  

# pseudocode for scenario 3:
# define the function name with its 2 parameter (flavors, toppings)
# create an icecream combination variable and set it to be an empty list (output will add to this list at the end)
# create a flavor element count variable and set it as 0
# create a topping element count variable and set it as 0
# create a while loop with the flavor element count variable and assign it to be less than the length of the flavors parameter
# (under the while loop) use the topping element count variable and assign it as 0 (so the loop can go through all of the flavor elements)
# create another while loop with the topping element count variable and assign it to be less than the length of the toppings parameter
# (under the second while loop) create another variable to show the possible combination between the flavors element count inside the flavors parameter and the topping element count inside the topping parameter (add a with string and spaces in between the two elements)
# use the icecream combination variable and append it to the possible combination variable (to add each pair to the icecream combination empty list)
# increment the topping element count variable to itself and increase by 1
# (outside of the second while loop) increment the flavor element count variable to itself and increase by 1
# (outside both of the while loops) return the icecream combination variable
# call the function name with all of the arguments inside each list
