# Part 1

Directions:
1. The user is presented with a list of underscores "_". Each Underscore represents one letter in a word.
2. The user guesses letters for the hidden word
    - For each correct guess, a letter will be replace the corresponding underscore.
    - For every wrong guess we are going to remember the number of wrong guesses and print out more and more of a snowman drawing.
3. When the snowman is finished and the user is out of guesses, they lose the game.
4. Use the constant SNOWMAN_WORD

Tips:

1. First, we will need to use `input` to get a string from the user and store it in a variable.
2. Second, we need to check to see if the input is valid.
    - In `get_number_from_user`, we used `isnumeric()` to ensure that the input was a number. In this function, we need to check to see if the input is a letter, and if the input contains only one letter.
        - `letter_from_user.isalpha()` will return `True` if the string variable `letter_from_user` contains only alphabetical characters
        - `len(letter_from_user)` will tell us the length of the string
3. Lastly, we need to return the input string
    - If the user gives bad input:
        - We print "Invalid letter please enter a single character."
        - Then return the input.
    - If the user gives valid input:
        - Then we just return the input.
      
      
SNOWMAN_WORD = "snowman"

def get_letter_from_user():
  user_input_letter = input("Please enter a letter: ") # allows the user to choose a letter

  if user_input_letter.isalpha() and len(user_input_letter) == 1: # checks if inputted value is a letter and is only 1 letter
    return user_input_letter
  else:
    print("Invalid letter, please enter a single character.")

def snowman():
  user_input_letter = get_letter_from_user() # use the previous function's as an assigned value
  if user_input_letter in SNOWMAN_WORD:
    print("Letter found")
    return True
  else:
    print("Letter not found")
    return False

snowman()
