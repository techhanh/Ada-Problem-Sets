# Part 1:
# Carmelo has built a set of tuples, where each tuple holds the first eight values in a sequence. They need our help to write a function that can tell them whether a new sequence is one they've already seen. Write a functionÂ is_known_sequencethat Carmelo can use to find out whether they've seen this sequence before.

carmelo_sequences = {
    (1, 2, 3, 4, 5, 6, 7, 8),
    (2, 4, 6, 8, 10, 12, 14, 16),
    (1, 1, 2, 3, 5, 8, 13, 21),
    (1, 3, 6, 10, 15, 21, 28, 36),
}

fibonacci_sequence = [1, 1, 2, 3, 5, 8, 13, 21]
prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19]

# Pseudocode:
# Input: a tuple index and 2 different lists, Output: Boolean value (True or False)
# Create a function with two parameters (sequence, known_sequence)
# Change the sequence list to a tuple (to match the already tuple in unknown_sequence)
# Use an if statement to show if the sequence is in the unknown_sequence
# Then return True if it is
# Else return False if it is not
# Print to call the function for each of the list to show the Boolean value result value

carmelo_sequences = {
    (1, 2, 3, 4, 5, 6, 7, 8),
    (2, 4, 6, 8, 10, 12, 14, 16),
    (1, 1, 2, 3, 5, 8, 13, 21),
    (1, 3, 6, 10, 15, 21, 28, 36),
}

fibonacci_sequence = [1, 1, 2, 3, 5, 8, 13, 21]
prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19]

def is_known_sequence(sequence, known_sequences):
  sequence_tuple = tuple(sequence)
  if sequence_tuple in known_sequences:
    return True
  return False

print(is_known_sequence(fibonacci_sequence, carmelo_sequences))
print(is_known_sequence(prime_numbers, carmelo_sequences))
